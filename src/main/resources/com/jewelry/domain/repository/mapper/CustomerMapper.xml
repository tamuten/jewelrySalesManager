<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jewelry.domain.repository.mapper.CustomerMapper">
<resultMap type="Customer" id="customerResultMap">
	<id column="id" property="id" />
	<result column="name" property="name" />
	<result column="name_kana" property="nameKana" />
	<result column="birthday" property="birthday" />
	<result column="gender" property="gender" />
	<result column="blood_type" property="bloodType" />
	<result column="phone_no1" property="phoneNo1" />
	<result column="phone_no2" property="phoneNo2" />
	<result column="phone_no3" property="phoneNo3" />
	<result column="mail_address" property="mailAddress" />
	<result column="address" property="address" />
	<result column="memo" property="memo" />
	<result column="signup_date" property="signupDate" />
	<association property="tantosha" column="tantosha_id" javaType="Tantosha">
		<id column="tantosha_id" property="id" />
		<result column="tantosha_name" property="name" />
		<result column="role" property="role" />
		<association property="shozoku" column="shozoku_id" javaType="Shozoku">
			<id column="shozoku_id" property="id"/>
			<result column="shozoku_name" property="name" />
		</association>
	</association>
</resultMap>

<select id="count" resultType="long">
SELECT COUNT(*) FROM customer
</select>
<select id="searchCount" resultType="long">
SELECT COUNT(*) FROM customer
<where>
<if test="searchName != null">
name LIKE '%' || #{searchName} || '%'
</if>
</where>
</select>
<sql id="findCustomer">
SELECT
    cu.id,
    cu.name,
    cu.name_kana,
    cu.birthday,
    cu.gender,
    cu.blood_type,
    cu.phone_no1,
    cu.phone_no2,
    cu.phone_no3,
    cu.mail_address,
    cu.address,
    cu.memo,
    cu.signup_date,
    ta.id as tantosha_id,
    ta.name as tantosha_name,
    ta.role,
    sho.id as shozoku_id,
    sho.name as shozoku_name
FROM
    ${customerTable} cu
    LEFT OUTER JOIN
    	tantosha ta
    ON cu.tantosha_id = ta.id
    LEFT OUTER JOIN
    	shozoku sho
    ON ta.shozoku_id = sho.id
</sql>
	<select id="findAll" resultMap="customerResultMap">
	<bind name="customerTable" value="'customer'"/>
	<include refid="findCustomer"/>
ORDER BY
    cu.id
	</select>

	<select id="findPage" resultMap="customerResultMap">
	<bind name="customerTable" value="
	'(
	SELECT
		*
	FROM
		customer
	ORDER BY
		id
	LIMIT #{pageable.pageSize}
	OFFSET #{pageable.offset}
	)'"/>
	<include refid="findCustomer"/>
	ORDER BY
    cu.id
	</select>
	<select id="selectOne" parameterType="integer" resultMap="customerResultMap">
	<bind name="customerTable" value="'customer'"/>
	<include refid="findCustomer"/>
WHERE
    cu.id = #{id}
	</select>
  <select id="search" parameterType="CustomerSearch" resultMap="customerResultMap">
SELECT
    cu.id,
    cu.name,
    cu.name_kana,
    cu.birthday,
    cu.gender,
    cu.blood_type,
    cu.phone_no1,
    cu.phone_no2,
    cu.phone_no3,
    cu.mail_address,
    cu.address,
    cu.memo,
    cu.signup_date,
    ta.id as tantosha_id,
    ta.name as tantosha_name,
    ta.role,
    sho.id as shozoku_id,
    sho.name as shozoku_name
FROM
    (
        SELECT
            *
        FROM
            customer
        <where>
        <if test="customerSearch.searchName != null">
            name LIKE '%' || #{customerSearch.searchName} || '%'
        </if>
        </where>
        ORDER BY
            id
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    ) cu
    LEFT OUTER JOIN
        tantosha ta
    ON  cu.tantosha_id = ta.id
    LEFT OUTER JOIN
        shozoku sho
    ON  ta.shozoku_id = sho.id
ORDER BY
    cu.id
  </select>
	<insert id="insertOne" parameterType="Customer" useGeneratedKeys="true" keyProperty="id">
INSERT INTO customer(
    name,
    name_kana,
    birthday,
    gender,
    blood_type,
    phone_no1,
    phone_no2,
    phone_no3,
    mail_address,
    address,
    memo,
    tantosha_id,
    signup_date
)
VALUES(
    #{name},
    #{nameKana},
    #{birthday},
    #{gender},
    #{bloodType},
    #{phoneNo1},
    #{phoneNo2},
    #{phoneNo3},
    #{mailAddress},
    #{address},
    #{memo},
    #{tantosha.id},
    #{signupDate}
)
	</insert>
	<update id="updateOne" parameterType="Customer">
UPDATE
    customer
SET
    name = #{name},
    name_kana = #{nameKana},
    birthday = #{birthday},
    gender = #{gender},
    blood_type = #{bloodType},
    phone_no1 = #{phoneNo1},
    phone_no2 = #{phoneNo2},
    phone_no3 = #{phoneNo3},
    mail_address = #{mailAddress},
    address = #{address},
    memo = #{memo},
    tantosha_id = #{tantosha.id}
WHERE
    id = #{id}
	</update>
	<update id="deleteOne" parameterType="integer">
		DELETE FROM customer WHERE id = #{id}
	</update>
</mapper>